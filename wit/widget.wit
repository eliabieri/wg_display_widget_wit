// WIT interface for the interaction between the host application and widgets
// Inspired by work-in-progress WASI Preview 2 WIT definitions (https://github.com/bytecodealliance/preview2-prototyping/tree/main/wit)
default world widget {
    use pkg.types.{widget-context, widget-result}

    import http: pkg.http
    import random: pkg.random
    import clocks: pkg.clocks
    import logging: pkg.logging

    // Return the name of the widget
    export get-name: func() -> string
    // Return the semantic version of the widget
    export get-version: func() -> string
    // Return the config JSON schema string
    export get-config-schema: func() -> string
    // Invoke the widget with the given context
    export run: func(context: widget-context) -> widget-result
}